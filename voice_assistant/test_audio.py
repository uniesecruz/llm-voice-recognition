"""
Teste espec√≠fico para s√≠ntese de voz - verifica se as corre√ß√µes resolveram o problema
"""
import sys
import os

# Adiciona o diret√≥rio atual ao path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from voice_synthesizer import VoiceSynthesizer

def test_voice_synthesis():
    """Testa a s√≠ntese de voz com as corre√ß√µes implementadas"""
    print("üîä TESTE DE S√çNTESE DE VOZ")
    print("=" * 40)
    
    try:
        # Inicializa o sintetizador
        print("\\n1. Inicializando sintetizador...")
        synthesizer = VoiceSynthesizer(language='pt-br', volume=0.8)
        
        # Teste 1: M√©todo padr√£o
        print("\\n2. Testando m√©todo padr√£o...")
        text1 = "Testando o m√©todo padr√£o de s√≠ntese de voz."
        success1 = synthesizer.text_to_speech(text1)
        print(f"Resultado m√©todo padr√£o: {'‚úÖ Sucesso' if success1 else '‚ùå Falha'}")
        
        # Teste 2: M√©todo stream
        print("\\n3. Testando m√©todo stream...")
        text2 = "Testando o m√©todo stream de s√≠ntese de voz."
        success2 = synthesizer.text_to_speech_stream(text2)
        print(f"Resultado m√©todo stream: {'‚úÖ Sucesso' if success2 else '‚ùå Falha'}")
        
        # Teste 3: M√∫ltiplas chamadas r√°pidas
        print("\\n4. Testando m√∫ltiplas chamadas...")
        for i in range(3):
            text = f"Esta √© a mensagem n√∫mero {i+1} de tr√™s."
            success = synthesizer.text_to_speech(text)
            print(f"Mensagem {i+1}: {'‚úÖ' if success else '‚ùå'}")
        
        # Teste 4: Texto longo
        print("\\n5. Testando texto mais longo...")
        long_text = """Este √© um teste com um texto mais longo para verificar 
        se o sistema consegue lidar com s√≠nteses maiores sem problemas de arquivos tempor√°rios. 
        O sistema agora deve gerenciar melhor os recursos e evitar conflitos."""
        
        success_long = synthesizer.text_to_speech(long_text)
        print(f"Resultado texto longo: {'‚úÖ Sucesso' if success_long else '‚ùå Falha'}")
        
        # Cleanup
        print("\\n6. Limpando recursos...")
        synthesizer.cleanup()
        
        print("\\n" + "=" * 40)
        if all([success1, success2, success_long]):
            print("‚úÖ TODOS OS TESTES DE √ÅUDIO PASSARAM!")
            print("‚úÖ Problema de arquivos tempor√°rios resolvido!")
        else:
            print("‚ùå Alguns testes falharam.")
        print("=" * 40)
        
    except Exception as e:
        print(f"\\n‚ùå Erro durante teste: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_voice_synthesis()
